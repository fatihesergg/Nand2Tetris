// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    // Last 3 bit for selection

    PARTS:
    // Selection
    DMux8Way(in=load, sel=address[3..5], a=loadA, b=loadB, c=loadC, d=loadD, e=loadE, f=loadF, g=loadG, h=loadH);


    // 8x8 = 64 RAM
    // if load == 1 then write input to one ram
    RAM8(in=in, load=loadA, address=address[0..2], out=out0);
    RAM8(in=in, load=loadB, address=address[0..2], out=out1);
    RAM8(in=in, load=loadC, address=address[0..2], out=out2);
    RAM8(in=in, load=loadD, address=address[0..2], out=out3);
    RAM8(in=in, load=loadE, address=address[0..2], out=out4);
    RAM8(in=in, load=loadF, address=address[0..2], out=out5);
    RAM8(in=in, load=loadG, address=address[0..2], out=out6);
    RAM8(in=in, load=loadH, address=address[0..2], out=out7);

    // Selection
    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[3..5], out=out);

}
